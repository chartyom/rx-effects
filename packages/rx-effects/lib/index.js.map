{"version":3,"file":"index.js","sources":["../src/action.ts","../src/stateStore.ts","../src/effect.ts","../src/effectScope.ts","../src/stateDeclaration.ts","../src/stateMutation.ts","../src/stateQuery.ts","../src/stateUtils.ts"],"sourcesContent":["import { Observable, Subject } from 'rxjs';\n\nexport type Action<Event> = {\n  readonly event$: Observable<Event>;\n\n  // TODO: Check typings\n  (): void;\n  (event: Event): void;\n};\n\nexport function createAction<Event>(): Action<Event> {\n  const source$ = new Subject<Event>();\n\n  const emitter = (event: Event): void => source$.next(event);\n  emitter.event$ = source$.asObservable();\n\n  return emitter as Action<Event>;\n}\n","import { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\nimport { StateMutation } from './stateMutation';\nimport { StateQuery } from './stateQuery';\n\nexport type StateReader<State> = Readonly<\n  StateQuery<State> & {\n    select: <R>(\n      selector: (state: State) => R,\n      compare?: (v1: R, v2: R) => boolean,\n    ) => Observable<R>;\n    query: <R>(\n      selector: (state: State) => R,\n      compare?: (v1: R, v2: R) => boolean,\n    ) => StateQuery<R>;\n  }\n>;\n\nexport type StateStore<State> = Readonly<\n  StateReader<State> & {\n    set: (state: State) => void;\n    update: (mutation: StateMutation<State>) => void;\n  }\n>;\n\nexport function createStateStore<State>(\n  initialState: State,\n  stateCompare: (s1: State, s2: State) => boolean = Object.is,\n): StateStore<State> {\n  const store$: BehaviorSubject<State> = new BehaviorSubject(initialState);\n  const state$ = store$.pipe(\n    distinctUntilChanged(stateCompare),\n    shareReplay({ refCount: true, bufferSize: 1 }),\n  );\n\n  return {\n    value$: state$,\n\n    get(): State {\n      return store$.value;\n    },\n\n    set(nextState: State) {\n      store$.next(nextState);\n    },\n\n    update(mutation: StateMutation<State>) {\n      const prevState = store$.value;\n      const nextState = mutation(prevState);\n      store$.next(nextState);\n    },\n\n    select<R>(\n      selector: (state: State) => R,\n      valueCompare: (v1: R, v2: R) => boolean = Object.is,\n    ): Observable<R> {\n      return state$.pipe(map(selector), distinctUntilChanged(valueCompare));\n    },\n\n    query<R>(\n      selector: (state: State) => R,\n      valueCompare: (v1: R, v2: R) => boolean = Object.is,\n    ): StateQuery<R> {\n      return {\n        get: () => selector(store$.value),\n        value$: this.select(selector, valueCompare),\n      };\n    },\n  };\n}\n","import {\n  identity,\n  merge,\n  Observable,\n  Observer,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Action } from './action';\nimport { StateQuery } from './stateQuery';\nimport { createStateStore } from './stateStore';\n\nexport type Effect<Event, Result = void, ErrorType = Error> = Readonly<{\n  result$: Observable<Result>;\n  done$: Observable<{ event: Event; result: Result }>;\n  error$: Observable<{ event: Event; error: ErrorType }>;\n  final$: Observable<Event>;\n  pending: StateQuery<boolean>;\n  pendingCount: StateQuery<number>;\n\n  handle: ((event$: Observable<Event>) => Subscription) &\n    ((action: Action<Event>) => Subscription);\n  destroy: () => void;\n}>;\n\nexport type EffectHandler<Event, Result> = (\n  event: Event,\n) => Result | Promise<Result> | Observable<Result>;\n\nexport function createEffect<Event, Result = void, ErrorType = Error>(\n  handler: EffectHandler<Event, Result>,\n  scopeSubscriptions?: Subscription,\n): Effect<Event, Result, ErrorType> {\n  const subscriptions = new Subscription();\n\n  if (scopeSubscriptions) {\n    scopeSubscriptions.add(subscriptions);\n  }\n\n  const done$ = new Subject<{ event: Event; result: Result }>();\n  const error$ = new Subject<{ event: Event; error: ErrorType }>();\n\n  const pendingCount = createStateStore<number>(0);\n  const increaseCount = (count: number): number => count + 1;\n  const decreaseCount = (count: number): number => count - 1;\n\n  function executePromise(event: Event, promise: Promise<Result>): void {\n    promise\n      .then((result) => {\n        pendingCount.update(decreaseCount);\n        done$.next({ event, result });\n      })\n      .catch((error) => {\n        pendingCount.update(decreaseCount);\n        error$.next({ event, error });\n      });\n  }\n\n  function executeObservable(\n    event: Event,\n    observable: Observable<Result>,\n  ): void {\n    observable.subscribe({\n      next: (result) => {\n        pendingCount.update(decreaseCount);\n        done$.next({ event, result });\n      },\n      error: (error) => {\n        pendingCount.update(decreaseCount);\n        error$.next({ event, error });\n      },\n    });\n  }\n\n  function execute(event: Event): void {\n    pendingCount.update(increaseCount);\n\n    try {\n      const handlerResult = handler(event);\n\n      if (handlerResult) {\n        if ('then' in handlerResult) {\n          executePromise(event, handlerResult);\n          return;\n        }\n\n        if (handlerResult instanceof Observable) {\n          executeObservable(event, handlerResult);\n          return;\n        }\n      }\n\n      pendingCount.update(decreaseCount);\n      done$.next({ event, result: handlerResult });\n    } catch (error) {\n      pendingCount.update(decreaseCount);\n      error$.next({ event, error });\n    }\n  }\n\n  const observer: Observer<Event> = {\n    next: (event) => execute(event),\n    error: (error) => {\n      done$.error(error);\n      error$.error(error);\n    },\n    complete: () => {\n      done$.complete();\n      error$.complete();\n    },\n  };\n\n  function handle(source: Observable<Event> | Action<Event>): Subscription {\n    const observable = source instanceof Observable ? source : source.event$;\n\n    const subscription = observable.subscribe(observer);\n    subscriptions.add(subscription);\n\n    return subscription;\n  }\n\n  return {\n    done$: done$.asObservable(),\n    result$: done$.pipe(map(({ result }) => result)),\n    error$: error$.asObservable(),\n    final$: merge(done$, error$).pipe(map(({ event }) => event)),\n    pending: pendingCount.query((count) => count > 0),\n    pendingCount: pendingCount.query(identity),\n\n    handle,\n    destroy: () => subscriptions.unsubscribe(),\n  };\n}\n","import { Subscription, TeardownLogic } from 'rxjs';\nimport { createEffect, Effect, EffectHandler } from './effect';\n\nexport type EffectScope = Readonly<{\n  add: (teardown: TeardownLogic) => void;\n  destroy: () => void;\n\n  createEffect: <Event, Result = void, ErrorType = Error>(\n    handler: EffectHandler<Event, Result>,\n  ) => Effect<Event, Result, ErrorType>;\n}>;\n\nexport function createEffectScope(): EffectScope {\n  const subscriptions = new Subscription();\n\n  return {\n    add: (teardown) => subscriptions.add(teardown),\n    destroy: () => subscriptions.unsubscribe(),\n\n    createEffect: (handler) => createEffect(handler, subscriptions),\n  };\n}\n","import { createStateStore, StateStore } from './stateStore';\n\nexport type StateFactory<State extends object> = (\n  values?: Partial<State>,\n) => State;\n\nexport type StateDeclaration<State extends object> = {\n  initialState: State;\n  createState: StateFactory<State>;\n  createStore: (initialState?: State) => StateStore<State>;\n};\n\nexport function declareState<State extends object>(\n  stateFactory: StateFactory<State>,\n  stateCompare?: (s1: State, s2: State) => boolean,\n): StateDeclaration<State> {\n  const initialState = stateFactory();\n  const storeFactory = (state: State = initialState): StateStore<State> =>\n    createStateStore(state, stateCompare);\n\n  return {\n    initialState,\n    createState: stateFactory,\n    createStore: storeFactory,\n  };\n}\n","export type StateMutation<State> = (state: State) => State;\n\nexport function pipeStateMutations<State>(\n  mutations: Array<StateMutation<State>>,\n): StateMutation<State> {\n  return (state) =>\n    mutations.reduce((nextState, mutation) => mutation(nextState), state);\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type StateQuery<T> = Readonly<{\n  get: () => T;\n  value$: Observable<T>;\n}>;\n\nexport function mapStateQuery<T, R>(\n  query: StateQuery<T>,\n  mapper: (value: T) => R,\n): StateQuery<R> {\n  return {\n    get: () => mapper(query.get()),\n    value$: query.value$.pipe(map(mapper)),\n  };\n}\n","import { Observable } from 'rxjs';\nimport { withLatestFrom } from 'rxjs/operators';\nimport { Action } from './action';\nimport { createEffect, Effect } from './effect';\nimport { StateQuery } from './stateQuery';\nimport { StateStore } from './stateStore';\n\nexport function createUpdateStoreEffect<Event, State>(\n  store: StateStore<State>,\n  reducer: (state: State, event: Event) => State,\n): Effect<Event> {\n  return createEffect((event) =>\n    store.update((state) => reducer(state, event)),\n  );\n}\n\nexport function createResetStoreEffect<State>(\n  store: StateStore<State>,\n  nextState: State,\n): Effect<void> {\n  return createEffect(() => store.set(nextState));\n}\n\nexport function withStore<Event, State>(\n  action: Observable<Event> | Action<Event>,\n  store: StateStore<State>,\n): Observable<[Event, State]> {\n  const observable = action instanceof Observable ? action : action.event$;\n\n  return observable.pipe(withLatestFrom(store.value$));\n}\n\nexport function withQuery<Event, Value>(\n  action: Observable<Event> | Action<Event>,\n  query: StateQuery<Value>,\n): Observable<[Event, Value]> {\n  const observable = action instanceof Observable ? action : action.event$;\n\n  return observable.pipe(withLatestFrom(query.value$));\n}\n"],"names":[],"mappings":"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"}